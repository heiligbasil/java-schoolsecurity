server.port=${PORT:2019}

#Feature that determines what happens when no accessors are found for a type
#(and there are no annotations to indicate it is meant to be serialized).
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
server.error.whitelabel.enabled=false
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=none
# use data.sql file
#spring.datasource.initialization-mode=never
spring.datasource.initialization-mode=always

# NOT USING H2 CONFIGURATION
#   begin h2 configuration
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#   end h2 configuration

#   begin heroku postgresql configuration (Java Database Connection)
spring.datasource.url=${SPRING_DATA_URL:jdbc:postgresql://ec2-75-101-128-10.compute-1.amazonaws.com:5432/dau5d8pv8p7pu5?user=kcifplcagoufdd&password=9d70258afb8462315addb20a42272a5c9de29978302514a86d1ba43ed0b3ab2b&sslmode=require}
spring.datasource.username=kcifplcagoufdd
spring.datasource.password=9d70258afb8462315addb20a42272a5c9de29978302514a86d1ba43ed0b3ab2b
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#   end heroku postgresql configuration

#   begin local postgresql configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/dbstarthere
#spring.datasource.username=postgres
#spring.datasource.password=${MYDBPASSWORD:qwerty}
#spring.datasource.password=qwerty
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#   end local postgresql configuration

